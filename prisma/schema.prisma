// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Inventory {
  id          String   @id @default(cuid())
  productId   String   @unique
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity    Int      @default(0)
  location    String?
  updatedBy   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  stock       Int      @default(0)
  category    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  inventory   Inventory?
}

model PurchaseOrder {
  id          String   @id @default(cuid())
  supplierId  String
  supplier    Supplier @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  items       Json?
  total       Float
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Supplier {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  phone       String?
  address     String?
  city        String?
  country     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  purchaseOrder PurchaseOrder[]
}


model Payment {
  id          String   @id @default(cuid())
  invoiceId   String
  invoice     Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  amount      Float
  method      String
  status      String   @default("pending")
  paidAt      DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model Invoice {
  id            String   @id @default(cuid())
  removed       Boolean  @default(false)
  converted     Boolean  @default(false)
  salesOrder    String?
  date          DateTime @default(now())
  expiredDate   DateTime @default(now())
  customerId    String
  customer      Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  items         Json?
  taxRate       Float    @default(0)
  subTotal      Float
  taxTotal      Float    @default(0)
  total         Float
  credit        Float    @default(0)
  discount      Float    @default(0)
  status        String   @default("draft")
  approved      Boolean  @default(false)
  createdDate   DateTime @default(now())
  updatedDate   DateTime @updatedAt
  payment       Payment[]
}

model SalesOrder {
  id            String   @id @default(cuid())
  removed       Boolean  @default(false)
  converted     Boolean  @default(false)
  quotation     String?
  date          DateTime @default(now())
  expiredDate   DateTime @default(now())
  customerId    String
  customer      Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  items         Json?
  taxRate       Float    @default(0)
  subTotal      Float
  taxTotal      Float    @default(0)
  total         Float
  credit        Float    @default(0)
  discount      Float    @default(0)
  status        String   @default("draft")
  approved      Boolean  @default(false)
  createdDate   DateTime @default(now())
  updatedDate   DateTime @updatedAt
}

model Quotation {
  id            String   @id @default(cuid())
  removed       Boolean  @default(false)
  converted     Boolean  @default(false)
  date          DateTime @default(now())
  expiredDate   DateTime @default(now())
  customerId    String
  customer      Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  items         Json?
  taxRate       Float    @default(0)
  subTotal      Float
  taxTotal      Float    @default(0)
  total         Float
  credit        Float    @default(0)
  discount      Float    @default(0)
  status        String   @default("draft")
  approved      Boolean  @default(false)
  createdDate   DateTime @default(now())
  updatedDate   DateTime @updatedAt
}

model Customer {
  id          String     @id @default(cuid())
  name        String
  email       String     @unique
  phone       String?    @unique
  address     String?
  city        String?
  country     String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  invoices    Invoice[]
  quotations  Quotation[]
  salesOrder  SalesOrder[]
}
